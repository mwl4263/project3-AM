@{
    ViewData["Title"] = "Professional Employment Table";
}
<h1>@ViewData["Title"]</h1>

@model Project3_FinalExam.ViewModels.EmploymentViewModel

<div id="employment"></div>
<div id="jsGrid" class="jsGrid"></div>
<canvas id="Chartjs" class="Chartjs" width="400" height="400"></canvas>


<link rel="stylesheet" href="~/jqueryui/themes/le-frog/jquery-ui.min.css">
<script src="~/jquery/jquery.js"></script>
<script src="~/jqueryui/jquery-ui.js"></script>
<link src="text/css" rel="stylesheet" href="~/jsgrid/jsgrid.min.css" />
<link type="text/css" rel="stylesheet" href="~/jsgrid/jsgrid-theme.min.css" />
<script src="~/jsgrid/jsgrid.min.js"></script>
<script src="~/Chart.js/chart.js"></script>
<script src="~/Chart.js/chart.min.js"></script>
<script>

        $("#jsGrid").jsGrid({
            height: "90%",
            width: "100%",
            sorting: true,
            paging: true,

            data: @Html.Raw(Json.Serialize(Model.employment)),
            fields: [
                { name: "employer", type: "text", width: 200 },
                { name: "degree", type: "text", width: 100 },
                { name: "city", type: "text", width: 200 },
                { name: "title", type: "text", width: 250 },
                { name: "startDate", type: "text", width: 100 }
            ]
        });
    function containsObject(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
            
        }
        return false;
        
   
}
    var labels = []
    rawData = []
    var serial = @Html.Raw(Json.Serialize(Model.employment));
        for (element in serial) {
            if (containsObject(serial[element].degree, labels) == false) {
                labels.push(serial[element].degree);
            }
            rawData.push(serial[element].degree);

            
    };
    
    function getOccurrence(array, value) {
        var count = 0;
        array.forEach((v) => (v === value && count++));
        return count;
    }

    console.log
    console.log(labels);
    occurences = [];
    for (e in labels) {

        console.log(labels[e])
        count = 0;
        rawData.forEach((v) => (v === labels[e] && count++));
        occurences.push(count);
    };


    console.log(occurences);
    ctx = $('#Chartjs');
    var myBarChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: "Employment chart",
                backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850", "#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850"],
                data: occurences
            }]
        },
        options: {
        }
        });
    
</script>